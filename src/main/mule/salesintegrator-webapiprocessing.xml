<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:batch="http://www.mulesoft.org/schema/mule/batch"
	xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:wsc="http://www.mulesoft.org/schema/mule/wsc" xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd
http://www.mulesoft.org/schema/mule/wsc http://www.mulesoft.org/schema/mule/wsc/current/mule-wsc.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd">
	
	<flow name="salesintegrator-webapiexperienceFlow" doc:id="a9089982-b3e0-4090-8744-e06aabaf5461" initialState="started">
		<http:listener doc:name="SalesIntegradorerviceProccessComplete" doc:id="500ebad3-5201-40f9-a23c-cd1dfab3a64c" config-ref="HTTP_Listener_config" path="/SalesIntegradorervice" allowedMethods="POST"/>
		<flow-ref doc:name="selectObjectList" doc:id="0564a064-8a46-4d20-90d2-f63fec53db72" name="selectObjectList"/>
		<!-- [STUDIO:"accountProccess"]<flow-ref doc:name="accountProccess" doc:id="673c7c39-ad94-42c2-8781-1608ee82b315" name="AccountProcessValidatingExistingOrCreation"/> [STUDIO] -->
		<!-- [STUDIO:"products2Proccess"]<flow-ref doc:name="products2Proccess" doc:id="066585ff-8ee0-4cbd-b432-4b4ccdf40ea3" name="products2ProcessValidatingExistingOrCreation" /> [STUDIO] -->
		<!-- [STUDIO:"pricebook2Proccess"]<flow-ref doc:name="pricebook2Proccess" doc:id="27a5e4a8-1c81-471d-876c-cd799056bf2c" name="Pricebook2ProcessValidatingExistingOrCreation"/> [STUDIO] -->
		<!-- [STUDIO:"pricebookentryProccess"]<flow-ref doc:name="pricebookentryProccess" doc:id="35d31dae-81f2-4c9d-a6ac-7d3910746649" name="PricebookentryProcessValidatingExistingOrCreation"/> [STUDIO] -->
		<!-- [STUDIO:"contractProccess"]<flow-ref doc:name="contractProccess" doc:id="41b37f7e-9950-4440-8df1-141e478303e2" name="ContractProcessValidatingExistingOrCreation"/> [STUDIO] -->
		<flow-ref doc:name="orderProccess" doc:id="ee4d021b-4c9f-4a4b-8d53-aaf88b9961b8" name="OrderProcessValidatingExistingOrCreation"/>
		<ee:transform doc:name="GeneralObjectResponse" doc:id="5c673142-9cf1-454a-81b7-75b0d1048f9a" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"Responses": {
		"accountRespose":vars.accountResponse,
		"pricebookentryRespose":vars.pricebookkentryResponse,
		"contractRespose":vars.contractResponse,
		"pricebook2Respose":vars.pricebook2Response,
		"product2Response":vars.product2Response,
		"orderRespose":vars.orderResponse
	},
	"Request": {
		"accountRequest":vars.accountList,
		"pricebookentryRequest":vars.pricebookentryList,
		"contractRequest":vars.contractProccessList,
		"pricebook2Request":vars.pricebook2List,
		"product2Request":vars.productList,
		"orderRequest":vars.orderList
	}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="2310764e-906f-4a56-ac04-e8df5a6a0691" />
	</flow>
	<flow name="selectObjectList" doc:id="04873107-e648-40fe-8bf1-9edafa33cd9c" >
		<set-variable value="#[payload]" doc:name="Request" doc:id="d2950931-513f-4e14-a280-e66727d3691e" variableName="Request" />
		<set-variable value="#[payload.account]" doc:name="accountList" doc:id="8b52ab11-7326-41c0-8976-37f47dd4f974" variableName="accountList" />
		<set-variable value="#[payload.order]" doc:name="orderList" doc:id="0b10422a-27ef-43a1-b71d-2e310f9c50b7" variableName="orderList" />
		<set-variable value="#[payload.pricebookentry]" doc:name="pricebookentryList" doc:id="65d764fd-a8cb-4431-a8b8-f62ac7500c05" variableName="pricebookentryList"/>
		<set-variable value="#[payload.contract]" doc:name="contractList" doc:id="50f50c70-7ecf-4696-987c-0af3f27e970a" variableName="contractList"/>
		<set-variable value="#[payload.pricebook2]" doc:name="pricebook2List" doc:id="6b600b86-bafa-4e89-9ea4-451db651de49" variableName="pricebook2List"/>
		<set-variable value="#[payload.product2]" doc:name="product2List" doc:id="0914afb9-b9b7-41dd-9dcd-7efbe7fda036" variableName="product2List"/>
	</flow>
	<flow name="app1-salesintegrator" doc:id="aa4fdf64-4632-4100-b2e4-e10cef635c0f" initialState="stopped">
		<http:listener doc:name="SalesIntegradorervice" doc:id="24e94f8c-5443-491c-b88b-0b5528a40240" path="/SalesIntegradorervice" config-ref="HTTP_Listener_config" allowedMethods="GET" />
		<set-variable value="#[attributes.queryParams.Service]" doc:name="Service" doc:id="168eaf78-b902-4426-950e-6cc4ab4730ac" variableName="Service" />
		<flow-ref doc:name="ParametersForAPI" doc:id="40924fb1-b7b2-4b4a-9671-769992a3d777" name="getParameters" />
		<choice doc:name="Choice" doc:id="5ef8b3d1-5f4a-4066-b686-d53eceaa2fe1">
			<when expression='#[vars.Service == "account"]'>
				<flow-ref doc:name="GETAllAccountsReference" doc:id="5dc81e7b-520b-4f0b-92e8-ef09969d160a" name="GETAllAccounts" />
			</when>
			<when expression='#[vars.service == "order"]'>
				<flow-ref doc:name="GETAllOrder" doc:id="7cdf6e03-1dc8-457b-86a8-a6fe1f4b7f7c" name="GETAllOrder" />
			</when>
			<when expression='#[vars.service == "product"]'>
				<flow-ref doc:name="GETAllProductsReferens" doc:id="39f51677-4ea6-4898-988f-1dc52e389731" name="GETAllOrder" />
			</when>
			<when expression='#[vars.service == "pricebook2"]'>
				<flow-ref doc:name="GETAllPricebook2" doc:id="23d74263-970e-4e00-93ce-e864d03fa04c" name="GETAllPricebook2" />
			</when>
			<when expression='#[vars.service == "pricebookentry"]'>
				<flow-ref doc:name="GETAllPricebookentry" doc:id="cd614729-2d46-45fc-ad01-c3f60b156eec" name="GETAllPricebookentry" />
			</when>
		</choice>
		<flow-ref doc:name="ValidateVar" doc:id="fa014014-c10d-430c-81f7-50a8c32d6ffe" name="validateVar" />
	</flow>
	<flow name="products2ProcessValidatingExistingOrCreation" doc:id="80173085-0711-455c-b114-4ab723f59248" >
		<ee:transform doc:name="Transform To List&lt;Product2&gt;" doc:id="203cd4c9-062f-4b27-961b-c428706dfcd2" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
var products = vars.product2List
---
products map (product) -> 
{ 
		//"external_Id__c": product.externalId,
  		"LastModifiedDate": product.LastModifiedDate,
        "DisplayUrl": product.DisplayUrl,
        "IsDeleted": product.IsDeleted,
        "Description": product.Description,
        "ProductCode": product.ProductCode,
        "IsActive": product.IsActive,
        "ExternalId": product.ExternalId,
        "LastViewedDate": product.LastViewedDate,
        "LastReferencedDate": product.LastReferencedDate,
        "StockKeepingUnit": product.StockKeepingUnit,
        "type": product.`type`,
        "ExternalDataSourceId": product.ExternalDataSourceId,
        "Name": product.Name,
        "SystemModstamp": product.SystemModstamp,
        "IsArchived": product.IsArchived,
        "Type": product.Type,
        "CreatedById": product.CreatedById,
        "QuantityUnitOfMeasure": product.QuantityUnitOfMeasure,
        "CreatedDate": product.CreatedDate,
        "Family": product.Family,
        "Id": product.Id,
        "ProductClass": product.ProductClass,
        "LastModifiedById": product.LastModifiedById
}


]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="List Ids" doc:id="efebb7a9-d361-4e00-b9ee-5fa3e127c65b" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload filter ((item) -> item.ExternalId != null and item.ExternalId != "")
]]></ee:set-payload>
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="product2Object" ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<ee:transform doc:name="Concatenate Ids." doc:id="9ea12302-019d-445c-a7c8-454ea060a955" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output text/plain
---
(payload map (product2) -> product2.ExternalId) joinBy "','"
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="Create a query to validate existing records by external_Id__c." doc:id="bc4ff66c-3b4d-4c86-8f81-33aad5ee8935" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output text/plain

// Filtra los externalId vÃ¡lidos
var validExternalIds = if (payload != null) payload else ""

// Construye la consulta SQL
var query = if (validExternalIds != null and validExternalIds != "") 
	"SELECT Id, Name,ProductCode,Description,IsActive,CreatedDate,CreatedById,LastModifiedDate,LastModifiedById,SystemModstamp,Family,ExternalDataSourceId,ExternalId,DisplayUrl,QuantityUnitOfMeasure,IsDeleted,IsArchived,LastViewedDate,LastReferencedDate,StockKeepingUnit
 FROM Product2 "
 ++    "WHERE ExternalId IN ('" ++ validExternalIds ++ "')" ++ 
    " LIMIT 200"
else 
    ""

---
query

]]></ee:set-payload>
			</ee:message>
			<!-- <ee:variables >
				<ee:set-variable variableName="queryvalidateProduct2" ><![CDATA[%dw 2.0
output text/plain
-&#45;&#45;
payload]]></ee:set-variable>
			</ee:variables>-->
			<ee:variables >
				<ee:set-variable variableName="queryvalidateProduct2" ><![CDATA[%dw 2.0
output text/plain
---
payload]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<http:request method="POST" doc:name="WS products-webapisystem POST/getvalidateexistenceproduct" doc:id="9a5cd43f-b130-4062-9a41-5e7c7c549fbb" config-ref="HTTP_Request_configurationProduct" path="/getvalidateexistenceproduct"/>
		<ee:transform doc:name="Filter records that do not exist for creation." doc:id="0b9e0c57-cb36-4826-8bf3-64f58e34ecec" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json

// FunciÃ³n para verificar si un objeto no estÃ¡ en la lista de payload
fun notInPayload(item) = 
    if (isEmpty(payload)) 
        true 
    else 
        // Aseguramos que comparamos external_Id__c con los valores de los objetos del payload
        !(payload map ((p) -> p.ExternalId) contains item.ExternalId)

---
vars.product2Object filter (item) -> notInPayload(item)
]]></ee:set-payload>
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="validateProduct2" ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<choice doc:name="Proccess Product" doc:id="656db0d6-3493-461e-b870-7e23b0c8aaea" >
			<when expression="#[!isEmpty(payload)]">
				<ee:transform doc:name="Payload List&lt;Product2&gt; JSON" doc:id="51c6837f-c4ed-48ba-949c-aca6ea47680d" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<http:request method="POST" doc:name="WS products-webapisystem POST/productcreate" doc:id="c4e79993-f684-4808-ab24-d703c4bc4e2f" config-ref="HTTP_Request_configurationProduct" path="/productcreate"/>
				<ee:transform doc:name="Response to Creation for Lis&lt;Product2&gt; To Json" doc:id="9f84ff59-aa70-44e6-b62d-a11a59e3e91b" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<logger level="INFO" doc:name="Logger" doc:id="cdc2e535-052e-485b-97c5-c07f36b899e4" />
			</when>
			<otherwise >
				<ee:transform doc:name="List&lt;Product2&gt; validating existing to JSON" doc:id="09607c08-62b9-4dcb-a23b-688d1ff8aefc" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
vars.validateProduct2]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<logger level="INFO" doc:name="Logger" doc:id="32277874-950e-47b5-a454-c739fef629b0" />
			</otherwise>
		</choice>
		<set-variable value="#[payload]" doc:name="product2Response" doc:id="d354f4ba-e69b-4223-b860-66f57d6d899f" variableName="product2Response"/>
		<logger level="INFO" doc:name="Product2Response" doc:id="620d4107-1dc8-4c6f-b288-30ddf799321d" />
	</flow>
	<sub-flow name="validateVar" doc:id="23849bb8-4033-4bd2-a0e2-5dc2f64f0c56" >
		<validation:is-true doc:name="Validation" doc:id="0e06bc96-4780-479f-9dc5-abc5b76b602f" message="#['Invalid destination' ++ ' ' ++ (vars.Name default ' ')]" expression="#[['Name','Id','FromDate','ToDate','Service'] contains vars.Name]" />
		<validation:is-true doc:name="Validation1" doc:id="308bcd78-cea5-4759-b77e-4e2e2553d7bf" expression="#[['Name','Id','FromDate','ToDate','Service'] contains vars.Id]" message="#['Invalid destination' ++ ' ' ++ (vars.Id default ' ')]" />
		<validation:is-true doc:name="Validation2" doc:id="7d98726c-8d15-46eb-a8d8-9c22988b5f10" expression="#[['Name','Id','FromDate','ToDate','Service'] contains vars.FromDate ]" message="#['Invalid destination' ++ ' ' ++ (vars.FromDate default ' ')]" />
		<validation:is-true doc:name="Validation3" doc:id="33e6a23d-91e6-4197-bd87-46778a2d0e80" expression="#[['Name','Id','FromDate','ToDate','Service'] contains vars.Session ]" message="#['Invalid destination' ++ ' ' ++ (vars.Session default ' ')]" />
		<validation:is-true doc:name="Validation4" doc:id="27931b02-703f-435d-afc6-6e399df1c8a8" expression="#[['Name','Id','FromDate','ToDate','Service'] contains vars.ToDate ]" message="#['Invalid destination' ++ ' ' ++ (vars.ToDate default ' ')]" />
	</sub-flow>
	<sub-flow name="getParameters" doc:id="91aff73b-05e2-4fe3-ad03-1f5759ef15a6" >
		<set-variable value="#[message.attributes.queryParams.Name default '']" doc:name="Name" doc:id="ef3734af-bd64-48b4-bcbf-f20b07c801bc" variableName="Name"/>
		<logger level="INFO" doc:name="Logger" doc:id="00f39991-d736-46e2-815d-c42e1e02ff12" />
		<set-variable value="#[message.attributes.queryParams.Id default '']" doc:name="Id" doc:id="d39f8f6a-2138-49d8-9475-7a1fd78fa282" variableName="Id"/>
		<logger level="INFO" doc:name="Logger" doc:id="e1ef9672-7399-4f06-9ca2-dcf715e83ecf" />
		<set-variable value="#[message.attributes.queryParams.FromDate default '']" doc:name="FromDate" doc:id="11aaa8f2-7314-4777-af56-01c53884f9ab" variableName="FromDate"/>
		<logger level="INFO" doc:name="Logger" doc:id="f030fb66-b83a-4d70-ac95-86674e900b09" />
		<set-variable value="#[message.attributes.queryParams.ToDate default '']" doc:name="ToDate" doc:id="e1697192-3f42-4c31-8579-e8ee25ed0d4e" variableName="ToDate"/>
		<logger level="INFO" doc:name="Logger" doc:id="aee28611-409a-4827-9cb4-0f5be412ca5b" />
	</sub-flow>
	<flow name="GETAllAccounts" doc:id="92ed0d29-cebe-4c52-9b0d-6378150fbc37" >
		<http:request method="GET" doc:name="GetAllAccount" doc:id="946f7541-a1de-4313-a28b-ae3373bbe8a8" config-ref="HTTP_Request_configurationOrder" path="/getaccounts"/>
		<ee:transform doc:name="Transform List&lt;Account&gt; Customers To JSON" doc:id="ae41fb01-108a-46d7-96ed-7caf987ec805" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
{
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="GETAllOrder" doc:id="d9517828-0d7a-4a30-b33e-0aa3a1e09b7e" >
		<http:request method="GET" doc:name="GetAllAccount" doc:id="64b86590-e12c-48b1-88e6-816c39d46eaa" config-ref="HTTP_Request_configurationOrder" path="/getaccounts" />
		<ee:transform doc:name="Transform List&lt;Account&gt; Customers To JSON" doc:id="a01fe4f5-f810-4b76-83f5-ec6b41238c37" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
{
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="GETAllProducts" doc:id="a720c319-865c-45e7-bcaa-6c5dc2c7bc0d" >
		<http:request method="GET" doc:name="GetAllAccount" doc:id="2e74977b-5bd8-4632-882b-b5ddd46cf3bc" config-ref="HTTP_Request_configurationOrder" path="/getaccounts" />
		<ee:transform doc:name="Transform List&lt;Account&gt; Customers To JSON" doc:id="0367f269-b995-4a85-b324-7e69f4512770" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
{
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="GETAllPricebook2" doc:id="442ebcf4-86ad-46fe-b14a-8de78d49c323" >
		<http:request method="GET" doc:name="GetAllAccount" doc:id="fd5d3b85-a0de-4e49-8a5a-9277941e2c16" config-ref="HTTP_Request_configurationOrder" path="/getaccounts" />
		<ee:transform doc:name="Transform List&lt;Account&gt; Customers To JSON" doc:id="09459e95-d900-4a81-a760-e0b0d792b60e" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
{
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="GETAllPricebookentry" doc:id="ce1b71df-966c-4f3b-b264-efe18bf0d7b0" >
		<http:request method="GET" doc:name="GetAllAccount" doc:id="de193484-c759-4a40-a71c-bd851871fc80" config-ref="HTTP_Request_configurationOrder" path="/getaccounts" />
		<ee:transform doc:name="Transform List&lt;Account&gt; Customers To JSON" doc:id="44226f0c-c91f-46d1-a7bd-89e21fa84b40" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
{
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="GETAllAccountsParameters" doc:id="ec3c84cb-cea2-437a-9f8f-a640e884aced" >
		<http:request method="GET" doc:name="GetAllAccount" doc:id="cd9ad626-ba52-41ef-b511-b46829e001ff" config-ref="HTTP_Request_configurationOrder" path="/getaccounts" />
		<ee:transform doc:name="Transform List&lt;Account&gt; Customers To JSON" doc:id="ab0b393b-239f-4018-b087-4a4131538f4c" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
{
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="GETAllOrderParameters" doc:id="9d426774-c2f1-4101-b570-26d427b42d0a" >
		<http:request method="GET" doc:name="GetAllAccount" doc:id="ebbc981c-5356-4178-ad32-2a3e448591a0" config-ref="HTTP_Request_configurationOrder" path="/getaccounts" />
		<ee:transform doc:name="Transform List&lt;Account&gt; Customers To JSON" doc:id="278c91cd-884d-4c56-9431-2bb65445d786" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
{
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="GETAllPricebookParameters" doc:id="3c6ff84b-00b0-4353-ab71-567db7946f7d" >
		<http:request method="GET" doc:name="GetAllAccount" doc:id="034667a7-b1c6-4783-80c2-6ccd27784670" config-ref="HTTP_Request_configurationOrder" path="/getaccounts" />
		<ee:transform doc:name="Transform List&lt;Account&gt; Customers To JSON" doc:id="31767ac1-58a9-4e0c-902e-df378d27fe69" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
{
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="GETAllPricebookentryParameters" doc:id="7ab91e07-f798-4342-9877-ca3e10bc39f9" >
		<http:request method="GET" doc:name="GetAllAccount" doc:id="ba4b2784-fcef-40ce-b16e-5aa473e76bca" config-ref="HTTP_Request_configurationOrder" path="/getaccounts" />
		<ee:transform doc:name="Transform List&lt;Account&gt; Customers To JSON" doc:id="f847ed45-981e-4d61-88a6-e20c9486865a" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
{
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="GETAllProductsParameters" doc:id="a93024b5-5cc6-4e66-b0c7-6e6d50b7f86b" >
		<http:request method="GET" doc:name="GetAllAccount" doc:id="ae4f4536-bb89-4216-8fc6-6bf87f2b4f76" config-ref="HTTP_Request_configurationOrder" path="/getaccounts" />
		<ee:transform doc:name="Transform List&lt;Account&gt; Customers To JSON" doc:id="0663a3e0-70cc-4af3-bc41-a61912ff6d39" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
{
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="Pricebook2ProcessValidatingExistingOrCreation" doc:id="95cfb8b6-f193-478c-94f9-aaa10d2f9db6">
		<ee:transform doc:name="Transform To List&lt;Pricebook2&gt;" doc:id="e16df86b-9e91-405d-ad3e-1fe86dec41b2" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
var pricebook2s = vars.pricebook2List
---
//accounts map ((account) -> account.externalId)
pricebook2s map (pricebook2) -> 
{ 
   "external_Id__c" : pricebook2.external_Id__c,
   "IsStandard": pricebook2.IsStandard ,
   "IsDeleted": pricebook2.IsDeleted ,
   "Description": pricebook2.Description ,
   //"IsActive": pricebook2.IsActive ,
   "type": pricebook2.`type` ,
   "Name": pricebook2.Name ,
   "IsArchived": pricebook2.IsArchived ,
   "CreatedById": pricebook2.CreatedById 
   //,
   //"Id": pricebook2.Id 
}
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="List Ids" doc:id="0add619c-3344-499a-9786-df4087f8712a" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload filter ((item) -> item.external_Id__c != null and item.external_Id__c != "")
]]></ee:set-payload>
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="pricebook2Object" ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<ee:transform doc:name="Concatenate Ids." doc:id="c52aed17-532a-40d2-9dab-52f83335b9a0" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output text/plain
---
(payload map (pricebookentry) -> pricebookentry.external_Id__c) joinBy "','"
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="Create a query to validate existing records by external_Id__c." doc:id="2ca7d5ab-59b0-432a-8b48-aa5f5eb0e65d" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output text/plain

// Filtra los externalId vÃ¡lidos
var validExternalIds = if (payload != null) payload else ""

// Construye la consulta SQL
var query = if (validExternalIds != null and validExternalIds != "") 
	"SELECT external_Id__c,Id,IsDeleted,Name,CreatedById,IsArchived,Description,IsStandard FROM Pricebook2 " ++
    "WHERE external_Id__c IN ('" ++ validExternalIds ++ "')" ++ 
    " LIMIT 200"
else 
    ""

---
query
]]></ee:set-payload>
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="queryvalidatePricebook2" ><![CDATA[%dw 2.0
output text/plain
---
payload]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<http:request method="POST" doc:name="WS pricebook2-webapiprocessing POST/getvalidateexistencepricebook2" doc:id="056a2e60-4ced-4edf-89f6-fcb2a7e1fafb" config-ref="HTTP_Request_configurationPricebook2" path="/getvalidateexistencepricebook2" />
		<ee:transform doc:name="Filter records that do not exist for creation." doc:id="1a2e5d15-11ff-45f1-b626-ff3144f005e9" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json

// FunciÃ³n para verificar si un objeto no estÃ¡ en la lista de payload
fun notInPayload(item) = 
    if (isEmpty(payload)) 
        true 
    else 
        // Aseguramos que comparamos external_Id__c con los valores de los objetos del payload
        !(payload map ((p) -> p.external_Id__c) contains item.external_Id__c)

---
vars.pricebook2Object filter (item) -> notInPayload(item)
]]></ee:set-payload>
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="validatePricebook2" ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<choice doc:name="ProccessPricebook2" doc:id="ce34a185-35d7-472b-8814-67b074db9298" >
			<when expression="#[!isEmpty(payload)]" >
				<ee:transform doc:name="Payload List&lt;Pricebook2&gt; JSON" doc:id="03b2407b-4b2a-4cf3-8fa5-e09c93327e39" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload
]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<http:request method="POST" doc:name="WS pricebook2-webapiprocessing POST/createdpricebook2" doc:id="4f7c9e51-48dc-4dbb-8b94-d10cfca78e67" config-ref="HTTP_Request_configurationPricebook2" path="/createdpricebook2"/>
				<ee:transform doc:name="Response to Creation for Lis&lt;Pricebook2&gt; To Json" doc:id="1e503a7f-2ad9-47c2-ad84-5b74dace755f" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<logger level="INFO" doc:name="Logger" doc:id="2c4ff07b-3464-40c5-9348-c758cb82c856" />
			</when>
			<otherwise >
				<ee:transform doc:name="List&lt;Pricebook2&gt; validating existing to JSON" doc:id="c5100a1f-f1b6-4c34-be69-839f558a2bc4" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
vars.validatePricebook2]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<logger level="INFO" doc:name="Logger" doc:id="15c5774a-7a40-4182-9781-48e9cb0a1a50" />
			</otherwise>
		</choice>
		<set-variable value="#[payload]" doc:name="pricebook2Response" doc:id="dc3bf875-b9a3-4fb8-a38f-f5ef28b5c8a7" variableName="pricebook2Response"/>
		<logger level="INFO" doc:name="Pricebook2REsponse" doc:id="92db1ac8-95de-46f2-b9c6-2e557db2cde6" />
	</flow>
	<flow name="ContractProcessValidatingExistingOrCreation" doc:id="0a88d062-8c9c-4a06-859f-8ff9638adc41" >
		<ee:transform doc:name="Transform To List&lt;Contract&gt;" doc:id="2ef800b4-4574-4887-a2a3-f7496b6bf86b" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
var contracts = vars.contractList
---
contracts map (contract) -> 
{ 
   "external_Id__c": contract.external_Id__c,
		"CustomerSignedDate": contract.CustomerSignedDate,
        "ActivatedById": contract.ActivatedById,
        //LastModifiedDate": payload01.LastModifiedDate,
        "ContractNumber": contract.ContractNumber,
        "AccountId": contract.AccountId,
        "Description": contract.Description,
        "BillingCity": contract.BillingCity,
        "CustomerSignedId": contract.CustomerSignedId,
        //LastReferencedDate: payload01.LastReferencedDate,
        "BillingLatitude": contract.BillingLatitude,
        "ContractTerm": contract.ContractTerm,
        //`type`: payload01.`Contract`,
        "CompanySignedId": contract.CompanySignedId,
        "StatusCodecontractOwnerId": contract.OwnerId,
        "CreatedById": contract.CreatedById,
        "BillingLongitude": contract.BillingLongitude,
        "BillingGeocodeAccuracy": contract.BillingGeocodeAccuracy,
        "BillingPostalCode": contract.BillingPostalCode,
        "CustomerSignedTitle": contract.CustomerSignedTitle,
        "ActivatedDate": contract.ActivatedDate,
        "Status": contract.Status,
        "IsDeleted": contract.IsDeleted,
        "SpecialTerms": contract.SpecialTerms,
        //LastViewedDate: payload01.LastViewedDate,
        "LastApprovedDate": contract.LastApprovedDate,
        "EndDate": contract.EndDate,
        //SystemModstamp: payload01.SystemModstamp,
        "BillingCountry": contract.BillingCountry,
        "BillingStreet": contract.BillingStreet,
        //CreatedDate: payload01.CreatedDate,
        //LastActivityDate: payload01.LastActivityDate,
        "Pricebook2Id": contract.Pricebook2Id,
        "CompanySignedDate": contract.CompanySignedDate,
        "OwnerExpirationNotice": contract.OwnerExpirationNotice,
        "Id": contract.Id,
        "LastModifiedById": contract.LastModifiedById,
        "BillingState": contract.BillingState,
}
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="List Ids" doc:id="d723f481-143d-4a32-ae28-672a17f42327" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload filter ((item) -> item.external_Id__c != null and item.external_Id__c != "")
]]></ee:set-payload>
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="contractObject" ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<ee:transform doc:name="Concatenate Ids." doc:id="a0e45b0e-eb2f-4670-b9e8-83027e0dd5ba" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output text/plain
---
(payload map (contract) -> contract.external_Id__c) joinBy "','"
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="Create a query to validate existing records by external_Id__c." doc:id="641be4f5-6708-4e43-b3d3-93a6cef0fc3e" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output text/plain

// Filtra los externalId vÃ¡lidos
var validExternalIds = if (payload != null) payload else ""

// Construye la consulta SQL
var query = if (validExternalIds != null and validExternalIds != "") 
"SELECT FIELDS(ALL) FROM contract "  ++
    " WHERE external_Id__c IN ('" ++ validExternalIds ++ "')" ++ 
    " LIMIT 200"
else 
    ""

---
query
]]></ee:set-payload>
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="queryvalidateContract" ><![CDATA[%dw 2.0
output text/plain
---
payload]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<http:request method="POST" doc:name="WS contract-webapiprocessing POST/getvalidateexistencecontract" doc:id="57d7ff61-aa6a-4305-a6dd-fb8bb23f0d21" config-ref="HTTP_Request_configurationContract2" path="/getvalidateexistencecontract"/>
		<ee:transform doc:name="Filter records that do not exist for creation." doc:id="d37a4b09-1eb6-4ff7-ae9e-f74337b2948a" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json

// FunciÃ³n para verificar si un objeto no estÃ¡ en la lista de payload
fun notInPayload(item) = 
    if (isEmpty(payload)) 
        true 
    else 
        // Aseguramos que comparamos external_Id__c con los valores de los objetos del payload
        !(payload map ((p) -> p.external_Id__c) contains item.external_Id__c)

---
vars.contractObject filter (item) -> notInPayload(item)
]]></ee:set-payload>
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="validateContract" ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<choice doc:name="ProccessContract" doc:id="890dc48f-4ac2-40e6-a0aa-3bac9e575199" >
			<when expression="#[!isEmpty(payload)]" >
				<ee:transform doc:name="Payload List&lt;Contract&gt; JSON" doc:id="304d544f-22e5-4324-9aab-49364970e0a2" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload
]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<http:request method="POST" doc:name="contract-webapiprocessing POST/postcreatedcontracts" doc:id="edb7c7b6-eee2-4e05-b42b-cc2edaf6b86a" config-ref="HTTP_Request_configurationContract2" path="/postcreatedcontracts" />
				<ee:transform doc:name="Response to Creation for Lis&lt;Pricebookentry&gt; To Json" doc:id="ddc434eb-dab6-45be-815a-033de8339cec" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<logger level="INFO" doc:name="Logger" doc:id="44756850-6c95-4fca-8736-a70a7f74ad4e" />
			</when>
			<otherwise >
				<ee:transform doc:name="List&lt;Contract&gt; validating existing to JSON" doc:id="59e088e9-0111-4e50-9f86-02cf09feb420" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
vars.validateContract]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<logger level="INFO" doc:name="Logger" doc:id="dcaa59d0-44d1-4636-976d-03d3f83327b3" />
			</otherwise>
		</choice>
		<set-variable value="#[payload]" doc:name="contractResponse" doc:id="22f16a0c-1fca-44a3-b19a-750b21eee4e2" variableName="contractResponse"/>
		<logger level="INFO" doc:name="ContractResponse" doc:id="0806427d-d85f-4552-9b6b-4063d11d182e" />
	</flow>
	<flow name="PricebookentryProcessValidatingExistingOrCreation" doc:id="8b25ebaa-f0c0-466c-a423-a146b38b80ad" >
		<ee:transform doc:name="Transform To List&lt;Pricebookentry&gt;" doc:id="3d6eec20-92b9-43bd-bc71-52d3a439e4e8" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
var pricebookentrys = vars.pricebookentryList
---
pricebookentrys map (pricebookentry) -> 
{ 
   "external_Id__c" : pricebookentry.external_Id__c,
   "UseStandardPrice": pricebookentry.UseStandardPrice,
		"type": pricebookentry.`type`,
        "IsDeleted": pricebookentry.IsDeleted,
        "ProductCode": pricebookentry.ProductCode,
        "IsActive": pricebookentry.IsActive,
        "Name": pricebookentry.Name,
        "IsArchived": pricebookentry.IsArchived,
        "UnitPrice": pricebookentry.UnitPrice,
        "Product2Id": pricebookentry.Product2Id,
        "CreatedById": pricebookentry.CreatedById,
        "Pricebook2Id": pricebookentry.Pricebook2Id,
        "Id": pricebookentry.Id,
        "LastModifiedById": pricebookentry.LastModifiedById        
        
}
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="List Ids" doc:id="eaefb519-a211-45c2-8426-13d784b3533a" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload filter ((item) -> item.external_Id__c != null and item.external_Id__c != "")
]]></ee:set-payload>
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="pricebookentryObject" ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<ee:transform doc:name="Concatenate Ids." doc:id="fa5621eb-8194-416b-ab07-392c8647a23e" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output text/plain
---
(payload map (pricebookentry) -> pricebookentry.external_Id__c) joinBy "','"
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="Create a query to validate existing records by external_Id__c." doc:id="db109cd7-b02c-467e-800d-9006891a3c46" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output text/plain

// Filtra los externalId vÃ¡lidos
var validExternalIds = if (payload != null) payload else ""

// Construye la consulta SQL
var query = if (validExternalIds != null and validExternalIds != "") 
	"SELECT external_Id__c,UseStandardPrice,LastModifiedDate,IsDeleted,ProductCode,IsActive,Name,SystemModstamp,IsArchived,UnitPrice,Product2Id,CreatedById,CreatedDate,Pricebook2Id,Id,LastModifiedById FROM PricebookEntry "++
	"WHERE external_Id__c IN ('" ++ validExternalIds ++ "')" ++ 
    " LIMIT 200"
else 
    ""

---
query
]]></ee:set-payload>
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="queryvalidatepricebookentry" ><![CDATA[%dw 2.0
output text/plain
---
payload]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<http:request method="POST" doc:name="WS pricebookentry-webapiprocessing POST/getvalidateexistencepricebookentry" doc:id="939f0af3-9bb2-475a-825c-723cc57474c9" config-ref="HTTP_Request_configurationPricebookentry" path="/getvalidateexistencepricebookentry" />
		<ee:transform doc:name="Filter records that do not exist for creation." doc:id="3ef826bc-57bf-42d9-aa0a-9aea6f78a7bd" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json

// FunciÃ³n para verificar si un objeto no estÃ¡ en la lista de payload
fun notInPayload(item) = 
    if (isEmpty(payload)) 
        true 
    else 
        // Aseguramos que comparamos external_Id__c con los valores de los objetos del payload
        !(payload map ((p) -> p.external_Id__c) contains item.external_Id__c)

---
vars.pricebookentryObject filter (item) -> notInPayload(item)
]]></ee:set-payload>
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="validatePricebookentry" ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<choice doc:name="ProccessPricebook" doc:id="acd5178b-0207-441e-b380-5923ae6a3a33" >
			<when expression="#[!isEmpty(payload)]" >
				<ee:transform doc:name="Payload List&lt;Pricebookentry&gt; JSON" doc:id="e31870e3-41bc-473b-976f-507d83b71eb1" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload
]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<http:request method="POST" doc:name="WS pricebookentry-webapiprocessing POST/postcreatepricebookentry" doc:id="c9bc8a10-6c37-47c3-9fbc-7560cf77d60a" config-ref="HTTP_Request_configurationPricebookentry" path="/postcreatepricebookentry" />
				<ee:transform doc:name="Response to Creation for Lis&lt;Pricebookentry&gt; To Json" doc:id="aed43e7d-19b7-47b2-80d7-2d00e472872b" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<logger level="INFO" doc:name="Logger" doc:id="65f4b808-4fc7-431f-a1bb-f9ca328552b1" />
			</when>
			<otherwise >
				<ee:transform doc:name="List&lt;Pricebookentry&gt; validating existing to JSON" doc:id="567d1720-0924-497d-bf1a-dbe62163f1fb" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
vars.validatePricebookentry]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<logger level="INFO" doc:name="Logger" doc:id="0d6bf607-afe7-4b1a-823c-0c46a7b362df" />
			</otherwise>
		</choice>
		<set-variable value="#[payload]" doc:name="pricebookkentryResponse" doc:id="de63be74-6889-4669-9cfe-1aacc9ae7ada" variableName="pricebookkentryResponse"/>
		<logger level="INFO" doc:name="PricebookentryResponse" doc:id="cd24ecdc-f664-4b69-b5cb-fd3f4b621408" />
	</flow>
	<flow name="OrderProcessValidatingExistingOrCreation" doc:id="eacd63cc-c064-4c59-8b91-9bc99d080330" >
		<ee:transform doc:name="Transform To List&lt;Order&gt;" doc:id="7fc0acd2-9b69-4cf8-ac35-8d24b57b3f00" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
var orders = payload.order
---
orders map (order) -> 
{ 
   	"external_Id__c" : order.externalId,
  	"type": order.attributes.`type`,
    "AccountId": order.AccountId,
    "BillingCity": order.BillingCity,
    "BillingCountry": order.BillingCountry,
    "BillingPostalCode": order.BillingPostalCode,
    "BillingStreet": order.BillingStreet,
    "CompanyAuthorizedById": order.CompanyAuthorizedById,
    "ContractId": order.ContractId,
    "CustomerAuthorizedById": order.CustomerAuthorizedById,
    "Description": order.Description,
    "EffectiveDate": if (order.EffectiveDate != null) order.EffectiveDate as Date else null,  // Valor predeterminado
    "EndDate": if (order.EndDate != null) order.EndDate as Date else null,
    "LastModifiedDate": if (order.LastModifiedDate != null) order.LastModifiedDate as Date else null,
    "LastReferencedDate": if (order.LastReferencedDate != null) order.LastReferencedDate as Date else null,
    "LastViewedDate": if (order.LastViewedDate != null) order.LastViewedDate as Date else null,
    "Name": order.Name,
    "OwnerId": order.OwnerId,
    "Pricebook2Id": order.Pricebook2Id,
    "ShippingCity": order.ShippingCity,
    "ShippingCountry": order.ShippingCountry,
    "ShippingPostalCode": order.ShippingPostalCode,
    "ShippingStreet": order.ShippingStreet,
    "Status": order.Status
}
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="List Ids" doc:id="869ea8d8-8046-4f28-a5e6-7fd52b8a195e" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload filter ((item) -> item.external_Id__c != null and item.external_Id__c != "")
]]></ee:set-payload>
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="orderObject" ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<ee:transform doc:name="Concatenate Ids." doc:id="77b183bc-efd0-46b6-a364-642cd18402c9" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output text/plain
---
(payload map (order) -> order.external_Id__c) joinBy "','"
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="Create a query to validate existing records by external_Id__c." doc:id="6c017b11-0f87-44fe-bb6e-b68a57b5d851" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output text/plain

// Filtra los externalId vÃ¡lidos
var validExternalIds = if (payload != null) payload else ""

// Construye la consulta SQL
var query = if (validExternalIds != null and validExternalIds != "") 
	"SELECT external_Id__c,Id,OwnerId,ContractId,AccountId,Pricebook2Id,OriginalOrderId,EffectiveDate,EndDate,IsReductionOrder,Status,Description,CustomerAuthorizedById,CustomerAuthorizedDate,CompanyAuthorizedById,CompanyAuthorizedDate,Type,BillingStreet,BillingCity,BillingState,BillingPostalCode,BillingCountry,BillingLatitude,BillingLongitude,BillingGeocodeAccuracy,ShippingStreet,ShippingCity,ShippingState,ShippingPostalCode,ShippingCountry,ShippingLatitude,ShippingLongitude,ShippingGeocodeAccuracy,Name,PoDate,PoNumber,OrderReferenceNumber,BillToContactId,ShipToContactId,ActivatedDate,ActivatedById,StatusCode,OrderNumber,TotalAmount,CreatedDate,CreatedById,LastModifiedDate,LastModifiedById,IsDeleted,SystemModstamp,LastViewedDate,LastReferencedDate FROM Order " ++    
	"WHERE external_Id__c IN ('" ++ validExternalIds ++ "')" ++ 
    " LIMIT 200"
else 
    ""

---
query
]]></ee:set-payload>
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="queryvalidateorder" ><![CDATA[%dw 2.0
output text/plain
---
payload]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<http:request method="POST" doc:name="WS order-webapiprocessing POST/getvalidateexistenceorder" doc:id="5be281e4-9e60-46b0-bf84-8a0f77cdaadc" config-ref="HTTP_Request_configurationOrder" path="/getvalidateexistenceorder" />
		<ee:transform doc:name="Filter records that do not exist for creation." doc:id="500262dd-6b99-4d0e-8ada-1ecbf6050e2d" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json

// FunciÃ³n para verificar si un objeto no estÃ¡ en la lista de payload
fun notInPayload(item) = 
    if (isEmpty(payload)) 
        true 
    else 
        // Aseguramos que comparamos external_Id__c con los valores de los objetos del payload
        !(payload map ((p) -> p.external_Id__c) contains item.external_Id__c)

---
vars.accountObject filter (item) -> notInPayload(item)
]]></ee:set-payload>
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="validateOrder" ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<choice doc:name="ProccessPricebook" doc:id="6f4ed4c4-0bf9-4b46-bcb8-d326245c7d02" >
			<when expression="#[!isEmpty(payload)]" >
				<ee:transform doc:name="Payload List&lt;Order&gt; JSON" doc:id="4c404183-2233-4cb0-8b26-478af920168f" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload
]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<http:request method="POST" doc:name="WS order-webapiprocessing POST/createOrder" doc:id="a0ac09f5-27c3-498e-a393-756ec832225d" config-ref="HTTP_Request_configurationOrder" path="/createOrder" />
				<ee:transform doc:name="Response to Creation for Lis&lt;Order&gt; To Json" doc:id="a747ebf1-9c45-42eb-843b-c6f69163a831" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<logger level="INFO" doc:name="ResponseOrder" doc:id="b92bdb47-159c-4e54-a047-1bf350cdf60b" />
			</when>
			<otherwise >
				<ee:transform doc:name="List&lt;Order&gt; validating existing to JSON" doc:id="31b88579-5d42-4226-b0ef-e9724920906d" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
vars.queryvalidateorder]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<logger level="INFO" doc:name="Logger" doc:id="580ac739-2994-43d8-927f-40236b20d936" />
			</otherwise>
		</choice>
		<set-variable value="#[payload]" doc:name="orderResponse" doc:id="2a2bc1f9-8055-432e-a606-be7086879b93" variableName="orderResponse"/>
		<logger level="INFO" doc:name="OrderResponse" doc:id="8c176e09-226d-4d6b-86bd-633d7ccbf3d2" />
	</flow>
	<flow name="AccountProcessValidatingExistingOrCreation" doc:id="573aa315-15ad-45ff-9a1f-f8e522f35ef6" >
		<ee:transform doc:name="Transform To List&lt;Account&gt;" doc:id="360c9eff-b2f3-4bd7-b19d-e32482d18fbb" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
var accounts = vars.accountList
---
accounts map (account) -> 
{ 
		"external_Id__c": account.external_Id__c,
  		//"Id": account.Id,
		  "Name": account.Name,
		  "BillingAddress": account.BillingAddress,
		  "BillingCity": account.BillingCity,
		  "BillingCountry": account.BillingCountry,
		  "BillingPostalCode": account.BillingPostalCode,
		  "BillingState": account.BillingState,
		  "BillingStreet": account.BillingStreet
}


]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="List Ids" doc:id="46620eb4-7600-43e9-ba0c-045da7f3cf7c" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload filter ((item) -> item.external_Id__c != null and item.external_Id__c != "")
]]></ee:set-payload>
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="accountObject" ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<ee:transform doc:name="Concatenate Ids." doc:id="bf63b924-9a2f-4f41-84c5-2d4f746ab7af">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output text/plain
---
(payload map (account) -> account.external_Id__c) joinBy "','"
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="Create a query to validate existing records by external_Id__c." doc:id="82a2a916-fc9b-49a9-93e8-2befcc22b0f0" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output text/plain

// Filtra los externalId vÃ¡lidos
var validExternalIds = if (payload != null) payload else ""

// Construye la consulta SQL
var query = if (validExternalIds != null and validExternalIds != "") 
    "SELECT external_Id__c, Id, IsDeleted, MasterRecordId, Name, Type, ParentId, BillingStreet, BillingCity, BillingState, BillingPostalCode, BillingCountry, BillingLatitude, BillingLongitude, BillingGeocodeAccuracy, ShippingStreet, ShippingCity, ShippingState, ShippingPostalCode, ShippingCountry, ShippingLatitude, ShippingLongitude, ShippingGeocodeAccuracy, Phone, Fax, AccountNumber, Website, PhotoUrl, Sic, Industry, AnnualRevenue, NumberOfEmployees, Ownership, TickerSymbol, Description, Rating, Site, OwnerId, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, LastActivityDate, LastViewedDate, LastReferencedDate, Jigsaw, JigsawCompanyId, CleanStatus, AccountSource, DunsNumber, Tradestyle, NaicsCode, NaicsDesc, YearStarted, SicDesc, DandbCompanyId, CustomerPriority__c, SLA__c, Active__c, NumberofLocations__c, UpsellOpportunity__c, SLASerialNumber__c, SLAExpirationDate__c FROM Account " ++ 
    "WHERE external_Id__c IN ('" ++ validExternalIds ++ "')" ++ 
    " LIMIT 200"
else 
    ""

---
query
]]></ee:set-payload>
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="queryvalidateaccount" ><![CDATA[%dw 2.0
output text/plain
---
payload]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<http:request method="POST" doc:name="WS account-customerwebapihttpsystem POST/getvalidateexistenceaccount" doc:id="16019336-33dd-4353-b329-6af5bd833902" config-ref="HTTP_Request_configuration" path="/getvalidateexistenceaccount" />
		<ee:transform doc:name="Filter records that do not exist for creation." doc:id="b9bd4fb1-de73-4b56-90d8-80345aaba85d" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json

// FunciÃ³n para verificar si un objeto no estÃ¡ en la lista de payload
fun notInPayload(item) = 
    if (isEmpty(payload)) 
        true 
    else 
        // Aseguramos que comparamos external_Id__c con los valores de los objetos del payload
        !(payload map ((p) -> p.external_Id__c) contains item.external_Id__c)

---
vars.accountObject filter (item) -> notInPayload(item)
]]></ee:set-payload>
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="validationAccount" ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<choice doc:name="Proccess Product" doc:id="43f0745b-c990-4303-9742-55016a018e60" >
			<when expression="#[!isEmpty(payload)]" >
				<ee:transform doc:name="Payload List&lt;Account&gt; JSON" doc:id="25bff4f8-c66e-488f-93b1-3b46911b8d3a" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload
]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<http:request method="POST" doc:name="WS account-customerwebapihttpsystem POST/accountcreated" doc:id="729317d0-2ebd-46f6-a465-621e8a7928dd" config-ref="HTTP_Request_configuration" path="/accountcreated" />
				<ee:transform doc:name="Response to Creation for Lis&lt;Account&gt; To Json" doc:id="cdb8e823-7ee9-4300-908a-0ab123afb3b2" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
					</ee:message>
					<ee:variables >
					</ee:variables>
				</ee:transform>
				<logger level="INFO" doc:name="ResponseProccess" doc:id="84e289e2-179d-4094-ad2d-6dc3631e999d" />
			</when>
			<otherwise >
				<ee:transform doc:name="List&lt;Account&gt; validating existing to JSON" doc:id="694c0889-e3b7-497d-b874-93770c8221d9" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
vars.validationAccount]]></ee:set-payload>
					</ee:message>
					<ee:variables >
					</ee:variables>
				</ee:transform>
				<logger level="INFO" doc:name="ResponseProccess" doc:id="6720af49-9e0e-44f9-a97a-3407beb21f92" />
			</otherwise>
		</choice>
		<set-variable value="#[payload]" doc:name="accountResponse" doc:id="636bcf72-cb0e-47df-8cb3-477230746d43" variableName="accountResponse"/>
		<logger level="INFO" doc:name="AccountResponse" doc:id="99c22833-2b76-4e15-9f66-9e421b3cd9ee" />
	</flow>
</mule>
